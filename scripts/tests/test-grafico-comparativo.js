/**
 * Script para valida√ß√£o t√©cnica do gr√°fico comparativo din√¢mico do Painel ODS
 * Testa a gera√ß√£o de um gr√°fico comparativo com ODS 1, 4 e 5 selecionados
 * 
 * Parte da valida√ß√£o t√©cnica do Dashboard Comparativo Din√¢mico (ODS)
 */

(async () => {
  try {
    console.log('üß™ Iniciando valida√ß√£o do gr√°fico comparativo din√¢mico...');
    console.log('üìä ODS a serem comparados: ODS 1, ODS 4 e ODS 5');
    
    // Se a fun√ß√£o global n√£o estiver dispon√≠vel, tenta importar do m√≥dulo
    if (typeof gerarGraficoComparativo !== 'function') {
      console.log('üîÑ Importando m√≥dulo painel-ods.js...');
      try {
        // Corrigindo o caminho para importa√ß√£o relativa correta
        const painelODS = await import('../../js/painel-ods.js');
        console.log('‚úÖ M√≥dulo importado com sucesso!');
        
        // Executa o teste com os ODS solicitados
        await painelODS.gerarGraficoComparativo(['ods1', 'ods4', 'ods5']);
        console.log('‚úÖ Gr√°fico comparativo gerado com sucesso para ODS 1, 4 e 5.');
      } catch (erroImport) {
        console.error('‚ùå Erro ao importar m√≥dulo:', erroImport);
        console.error('üìù Detalhes:', erroImport.message);
        return;
      }
    } else {
      // Caso a fun√ß√£o j√° esteja dispon√≠vel globalmente
      try {
        await gerarGraficoComparativo(['ods1', 'ods4', 'ods5']);
        console.log('‚úÖ Gr√°fico comparativo gerado com sucesso para ODS 1, 4 e 5.');
      } catch (erroExecucao) {
        console.error('‚ùå Erro ao executar gerarGraficoComparativo:', erroExecucao);
        console.error('üìù Detalhes:', erroExecucao.message);
        return;
      }
    }
    
    // Verifica√ß√£o do elemento canvas
    const canvas = document.getElementById('grafico-comparativo');
    if (canvas) {
      console.log('‚úÖ Canvas do gr√°fico encontrado no DOM');
      
      // Verifica se o Chart.js criou uma inst√¢ncia para este canvas
      if (typeof Chart !== 'undefined' && Chart.getChart(canvas)) {
        console.log('‚úÖ Inst√¢ncia do Chart.js criada com sucesso');
        
        // Verifica se o gr√°fico tem os datasets esperados
        const chart = Chart.getChart(canvas);
        const datasets = chart.data.datasets;
        
        if (datasets.length === 3) {
          console.log('‚úÖ N√∫mero correto de datasets (3) no gr√°fico');
          
          // Verifica os labels dos datasets
          const labels = datasets.map(ds => ds.label);
          console.log('üìä Labels dos datasets:', labels.join(', '));
          
          // Verifica se h√° dados em cada dataset
          const datasetsComDados = datasets.every(ds => ds.data && ds.data.length > 0);
          if (datasetsComDados) {
            console.log('‚úÖ Todos os datasets cont√™m dados v√°lidos');
          } else {
            console.warn('‚ö†Ô∏è Um ou mais datasets n√£o cont√™m dados v√°lidos');
          }
          
          // Verifica se cada dataset tem cores configuradas
          const datasetsComCores = datasets.every(ds => ds.borderColor && ds.backgroundColor);
          if (datasetsComCores) {
            console.log('‚úÖ Todos os datasets t√™m cores configuradas corretamente');
          } else {
            console.warn('‚ö†Ô∏è Um ou mais datasets n√£o t√™m cores configuradas corretamente');
          }
        } else {
          console.warn(`‚ö†Ô∏è N√∫mero incorreto de datasets: ${datasets.length} (esperado: 3)`);
        }
      } else {
        console.warn('‚ö†Ô∏è N√£o foi encontrada uma inst√¢ncia do Chart.js para o canvas');
      }
    } else {
      console.error('‚ùå Canvas #grafico-comparativo n√£o encontrado no DOM');
    }
    
    // Verifica√ß√µes de acessibilidade para o gr√°fico
    if (canvas) {
      // Verifica se o canvas tem atributo aria-label
      if (canvas.hasAttribute('aria-label')) {
        console.log(`‚úÖ Canvas tem atributo aria-label: "${canvas.getAttribute('aria-label')}"`);
      } else {
        console.warn('‚ö†Ô∏è Canvas n√£o tem atributo aria-label para acessibilidade');
      }
      
      // Verifica se h√° uma descri√ß√£o textual pr√≥xima ao gr√°fico
      const descricaoGrafico = document.querySelector('#grafico-comparativo-descricao');
      if (descricaoGrafico) {
        console.log('‚úÖ Descri√ß√£o textual do gr√°fico encontrada');
      } else {
        console.warn('‚ö†Ô∏è N√£o foi encontrada descri√ß√£o textual para o gr√°fico (recomendado para acessibilidade)');
      }
    }
    
    console.log('‚úÖ Valida√ß√£o do gr√°fico comparativo conclu√≠da!');
    
  } catch (erro) {
    console.error('‚ùå Erro ao validar gr√°fico comparativo:', erro);
    console.error('üìù Detalhes do erro:', erro.stack);
  }
})();