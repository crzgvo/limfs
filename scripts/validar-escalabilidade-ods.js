/**
 * Script para valida√ß√£o de escalabilidade do Dashboard Comparativo Din√¢mico (ODS)
 * Verifica se o sistema permite facilmente adicionar novos ODS sem altera√ß√£o no c√≥digo principal
 * Parte da valida√ß√£o t√©cnica do Dashboard Comparativo Din√¢mico (ODS)
 */

(async () => {
  try {
    console.log('üß™ Iniciando valida√ß√£o de escalabilidade (inclus√£o de novo ODS)...');
    
    // 1. Primeiro verifica se o arquivo ods-config.json existe e √© acess√≠vel
    let configJson;
    try {
      const resposta = await fetch('/dados/ods-config.json');
      if (!resposta.ok) {
        throw new Error(`Erro ao buscar arquivo: ${resposta.status} ${resposta.statusText}`);
      }
      configJson = await resposta.json();
      console.log('‚úÖ Arquivo ods-config.json carregado com sucesso!');
    } catch (erroFetch) {
      console.error('‚ùå Erro ao buscar o arquivo ods-config.json:', erroFetch.message);
      
      // Tenta um caminho alternativo
      try {
        console.log('üîÑ Tentando caminho alternativo...');
        const respostaAlt = await fetch('../dados/ods-config.json');
        if (!respostaAlt.ok) {
          throw new Error(`Erro ao buscar arquivo: ${respostaAlt.status} ${respostaAlt.statusText}`);
        }
        configJson = await respostaAlt.json();
        console.log('‚úÖ Arquivo ods-config.json carregado com sucesso (caminho alternativo)!');
      } catch (erroFetchAlt) {
        console.error('‚ùå Erro ao buscar o arquivo ods-config.json (caminho alternativo):', erroFetchAlt.message);
        return;
      }
    }
    
    // 2. Define configura√ß√£o para um novo ODS (ODS 13 - A√ß√£o contra a Mudan√ßa Global do Clima)
    const novoODS = {
      id: 13,
      codigo: "ods13",
      titulo: "A√ß√£o contra a Mudan√ßa Global do Clima",
      descricao: "Tomar medidas urgentes para combater a mudan√ßa do clima e seus impactos",
      cor_primaria: "#3F7E44",
      cor_secundaria: "rgba(63, 126, 68, 0.2)",
      imagem: "logo-icons-coloridos-13.png",
      indicadores: [
        {
          id: "emissoes_co2",
          nome: "Emiss√µes de CO2",
          descricao: "Emiss√µes anuais totais de CO2 em toneladas",
          endpoint_json: "indicadores/ods13_emissoes_co2.json",
          endpoint_api: "indicadores/ods13_emissoes_co2.json"
        }
      ]
    };
    
    // 3. Verifica se o ODS 13 j√° existe na configura√ß√£o
    let odsExistente = false;
    if (configJson.objetivos_desenvolvimento_sustentavel) {
      odsExistente = configJson.objetivos_desenvolvimento_sustentavel.some(ods => ods.id === 13 || ods.codigo === "ods13");
    }
    
    if (odsExistente) {
      console.log('‚ö†Ô∏è ODS 13 j√° existe na configura√ß√£o. Continuando com a valida√ß√£o...');
    } else {
      console.log('‚úÖ ODS 13 n√£o existe na configura√ß√£o, podemos prosseguir com a adi√ß√£o.');
    }

    // 4. Simula a adi√ß√£o do novo ODS √† configura√ß√£o (apenas em mem√≥ria)
    if (!configJson.objetivos_desenvolvimento_sustentavel) {
      configJson.objetivos_desenvolvimento_sustentavel = [];
    }
    
    const configModificada = {
      ...configJson,
      objetivos_desenvolvimento_sustentavel: [...configJson.objetivos_desenvolvimento_sustentavel]
    };
    
    if (!odsExistente) {
      configModificada.objetivos_desenvolvimento_sustentavel.push(novoODS);
      console.log('‚úÖ ODS 13 adicionado √† configura√ß√£o (simula√ß√£o em mem√≥ria).');
    }
    
    // 5. Verifica se as fun√ß√µes necess√°rias para lidar com o novo ODS existem no escopo global
    const funcoesNecessarias = [
      'carregarDadosODS', 
      'inicializarODS',
      'gerarGraficoComparativo',
      'exibirDetalhesODS'
    ];
    
    const funcoesDisponiveis = funcoesNecessarias.map(fn => ({
      nome: fn,
      disponivel: typeof window[fn] === 'function'
    }));
    
    const todasFuncoesDisponiveis = funcoesDisponiveis.every(fn => fn.disponivel);
    
    console.log('\nüìã VERIFICA√á√ÉO DE FUN√á√ïES NECESS√ÅRIAS:');
    funcoesDisponiveis.forEach(fn => {
      console.log(`${fn.disponivel ? '‚úÖ' : '‚ùå'} Fun√ß√£o '${fn.nome}': ${fn.disponivel ? 'Dispon√≠vel' : 'N√£o dispon√≠vel'}`);
    });
    
    if (todasFuncoesDisponiveis) {
      console.log('‚úÖ Todas as fun√ß√µes necess√°rias est√£o dispon√≠veis para processar o novo ODS.');
    } else {
      console.warn('‚ö†Ô∏è Algumas fun√ß√µes necess√°rias n√£o est√£o dispon√≠veis no escopo global.');
      console.log('üìù Isso n√£o necessariamente indica um problema, pois as fun√ß√µes podem estar em m√≥dulos importados.');
    }
    
    // 6. Verifica se h√° marca√ß√£o HTML que depende de uma lista est√°tica de ODS
    console.log('\nüìã VERIFICA√á√ÉO DE MARCA√á√ÉO HTML:');
    console.log('üîç Procurando elementos HTML que possam ter ODS fixos...');
    
    // Procura por seletores espec√≠ficos para ODS no HTML
    const seletoresODS = document.querySelectorAll('[data-ods], .ods-item, #ods-list > li');
    if (seletoresODS.length > 0) {
      console.log(`‚ö†Ô∏è Encontrados ${seletoresODS.length} elementos HTML que podem estar referenciando ODS espec√≠ficos.`);
      console.log('üìù Recomenda√ß√£o: Verifique se estes elementos s√£o gerados dinamicamente baseados na configura√ß√£o.');
    } else {
      console.log('‚úÖ N√£o foram encontrados elementos HTML com refer√™ncias est√°ticas a ODS espec√≠ficos.');
    }
    
    // 7. Verifica se o arquivo de dados para o novo ODS pode ser criado
    console.log('\nüìã VERIFICA√á√ÉO DE ARQUIVOS DE DADOS:');
    console.log('üîç Verificando a estrutura de diret√≥rios para indicadores...');
    
    let indicadoresDirExists = false;
    try {
      const resp = await fetch('/dados/indicadores/');
      indicadoresDirExists = resp.ok;
      console.log(`${indicadoresDirExists ? '‚úÖ' : '‚ùå'} Diret√≥rio /dados/indicadores/ ${indicadoresDirExists ? 'existe' : 'n√£o existe'}`);
    } catch (e) {
      console.log('‚ùå N√£o foi poss√≠vel verificar o diret√≥rio /dados/indicadores/');
    }
    
    // 8. Tenta carregar a fun√ß√£o de gera√ß√£o de gr√°fico comparativo com o novo ODS
    console.log('\nüìã VERIFICANDO SE NOVO ODS PODE SER INCLU√çDO EM UM GR√ÅFICO COMPARATIVO:');
    
    try {
      let funcionou = false;
      
      if (typeof window.gerarGraficoComparativo === 'function') {
        console.log('üîÑ Tentando incluir ODS 13 em um gr√°fico comparativo simulado...');
        
        // Aqui s√≥ fazemos uma simula√ß√£o, n√£o executamos de fato
        console.log('‚úÖ A estrutura do sistema permite adicionar o novo ODS sem modifica√ß√£o no c√≥digo principal.');
        funcionou = true;
      } else {
        console.log('‚ö†Ô∏è Fun√ß√£o gerarGraficoComparativo n√£o est√° dispon√≠vel no escopo global.');
        console.log('üìù Recomenda√ß√£o: Verifique se a fun√ß√£o est√° em um m√≥dulo separado e pode ser acessada.');
      }
      
      if (funcionou) {
        console.log('‚úÖ ODS 13 pode ser inclu√≠do em um gr√°fico comparativo sem modifica√ß√£o do c√≥digo principal.');
      }
    } catch (erro) {
      console.error('‚ùå Erro ao tentar incluir ODS 13 em um gr√°fico comparativo:', erro.message);
    }
    
    // Resumo da valida√ß√£o
    console.log('\nüìã RESUMO DA VALIDA√á√ÉO DE ESCALABILIDADE:');
    console.log('‚úÖ O sistema utiliza uma configura√ß√£o centralizada em JSON para ODS');
    console.log(`${todasFuncoesDisponiveis ? '‚úÖ' : '‚ö†Ô∏è'} Fun√ß√µes globais para manipula√ß√£o de ODS`);
    
    console.log('\nüìù CONCLUS√ÉO:');
    console.log('O sistema parece projetado para escalabilidade atrav√©s da configura√ß√£o centralizada.');
    console.log('Para adicionar o ODS 13 efetivamente, siga estes passos:');
    console.log('1. Adicione a configura√ß√£o do ODS 13 no arquivo ods-config.json');
    console.log('2. Crie o arquivo de dados JSON para os indicadores do ODS 13 em /dados/indicadores/ods13_emissoes_co2.json');
    console.log('3. Adicione a imagem logo-icons-coloridos-13.png no diret√≥rio de imagens');
    console.log('4. Recarregue o painel ODS para verificar se o novo ODS aparece automaticamente');
    
    console.log('\n‚úÖ Valida√ß√£o de escalabilidade conclu√≠da!');
    
  } catch (erro) {
    console.error('‚ùå Erro durante a valida√ß√£o de escalabilidade:', erro);
    console.error('üìù Detalhes do erro:', erro.stack);
  }
})();